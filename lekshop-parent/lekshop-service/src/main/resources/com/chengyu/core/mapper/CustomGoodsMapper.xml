<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chengyu.core.mapper.CustomGoodsMapper">

	<select id="getGoodsStockList" resultType="com.chengyu.core.domain.result.GoodsStockResult">
		select
			pg.title as goodsName,
			pgs.id as id,
			pgs.stock as stock,
			pgs.attr_symbol_name as attrSymbolName,
			pg.cate_name as cateName,
			pgs.price as price,
			pgs.img as img
		from pms_goods_sku pgs
		join pms_goods pg on pgs.goods_id = pg.id and pg.status = 1
		where 1=1
		<if test="form.shopId != null">
			and pg.shop_id = #{form.shopId}
		</if>
		<if test="form.cateId != null">
			and pg.cate_ids like concat('%',#{form.cateId},'%')
		</if>
		<if test="form.title != null">
			and pg.title like concat('%',#{form.title},'%')
		</if>
		order by pg.sort asc
	</select>


	<insert id="insertGoodsList" keyProperty="id" useGeneratedKeys="true" parameterType="java.util.List" keyColumn="id">
		insert into pms_goods (shop_id, shop_name, cate_pid,
		cate_tid, cate_id, cate_ids,
		cate_name, shop_cate_pid, shop_cate_tid,
		shop_cate_id, shop_cate_ids, shop_cate_name,
		type, title, description,
		main_img, main_video, goods_img,
		price, sort, weight,
		status, stock_type, freight_template_id,
		point_num, sell_num, pay_num,
		comment_num, good_comment_num, bad_comment_num,
		collection_num, group_type, group_num,
		group_limit_hours, group_limit_buy, group_single_buy,
		seckill_begin_time, seckill_end_time, seckill_limit_num,
		add_time, add_by, upd_time,
		upd_by, detail)
		values
		<foreach collection="list" item="item" separator="," index="index">
			(#{item.shopId,jdbcType=INTEGER}, #{item.shopName,jdbcType=VARCHAR}, #{item.catePid,jdbcType=INTEGER},
			#{item.cateTid,jdbcType=INTEGER}, #{item.cateId,jdbcType=INTEGER}, #{item.cateIds,jdbcType=VARCHAR},
			#{item.cateName,jdbcType=VARCHAR}, #{item.shopCatePid,jdbcType=INTEGER}, #{item.shopCateTid,jdbcType=INTEGER},
			#{item.shopCateId,jdbcType=INTEGER}, #{item.shopCateIds,jdbcType=VARCHAR}, #{item.shopCateName,jdbcType=VARCHAR},
			#{item.type,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR},
			#{item.mainImg,jdbcType=VARCHAR}, #{item.mainVideo,jdbcType=VARCHAR}, #{item.goodsImg,jdbcType=VARCHAR},
			#{item.price,jdbcType=DECIMAL}, #{item.sort,jdbcType=INTEGER}, #{item.weight,jdbcType=INTEGER},
			#{item.status,jdbcType=INTEGER}, #{item.stockType,jdbcType=INTEGER}, #{item.freightTemplateId,jdbcType=INTEGER},
			#{item.pointNum,jdbcType=INTEGER}, #{item.sellNum,jdbcType=INTEGER}, #{item.payNum,jdbcType=INTEGER},
			#{item.commentNum,jdbcType=INTEGER}, #{item.goodCommentNum,jdbcType=INTEGER}, #{item.badCommentNum,jdbcType=INTEGER},
			#{item.collectionNum,jdbcType=INTEGER}, #{item.groupType,jdbcType=INTEGER}, #{item.groupNum,jdbcType=INTEGER},
			#{item.groupLimitHours,jdbcType=INTEGER}, #{item.groupLimitBuy,jdbcType=INTEGER}, #{item.groupSingleBuy,jdbcType=INTEGER},
			#{item.seckillBeginTime,jdbcType=TIMESTAMP}, #{item.seckillEndTime,jdbcType=TIMESTAMP}, #{item.seckillLimitNum,jdbcType=INTEGER},
			#{item.addTime,jdbcType=TIMESTAMP}, #{item.addBy,jdbcType=VARCHAR}, #{item.updTime,jdbcType=TIMESTAMP},
			#{item.updBy,jdbcType=VARCHAR}, #{item.detail,jdbcType=LONGVARCHAR})
		</foreach>

	</insert>

	<resultMap id="BaseResultMap" type="com.chengyu.core.model.PmsGoods">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="shop_id" jdbcType="INTEGER" property="shopId" />
		<result column="shop_name" jdbcType="VARCHAR" property="shopName" />
		<result column="cate_pid" jdbcType="INTEGER" property="catePid" />
		<result column="cate_tid" jdbcType="INTEGER" property="cateTid" />
		<result column="cate_id" jdbcType="INTEGER" property="cateId" />
		<result column="cate_ids" jdbcType="VARCHAR" property="cateIds" />
		<result column="cate_name" jdbcType="VARCHAR" property="cateName" />
		<result column="shop_cate_pid" jdbcType="INTEGER" property="shopCatePid" />
		<result column="shop_cate_tid" jdbcType="INTEGER" property="shopCateTid" />
		<result column="shop_cate_id" jdbcType="INTEGER" property="shopCateId" />
		<result column="shop_cate_ids" jdbcType="VARCHAR" property="shopCateIds" />
		<result column="shop_cate_name" jdbcType="VARCHAR" property="shopCateName" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="main_img" jdbcType="VARCHAR" property="mainImg" />
		<result column="main_video" jdbcType="VARCHAR" property="mainVideo" />
		<result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<result column="sort" jdbcType="INTEGER" property="sort" />
		<result column="weight" jdbcType="INTEGER" property="weight" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="stock_type" jdbcType="INTEGER" property="stockType" />
		<result column="freight_template_id" jdbcType="INTEGER" property="freightTemplateId" />
		<result column="point_num" jdbcType="INTEGER" property="pointNum" />
		<result column="sell_num" jdbcType="INTEGER" property="sellNum" />
		<result column="pay_num" jdbcType="INTEGER" property="payNum" />
		<result column="comment_num" jdbcType="INTEGER" property="commentNum" />
		<result column="good_comment_num" jdbcType="INTEGER" property="goodCommentNum" />
		<result column="bad_comment_num" jdbcType="INTEGER" property="badCommentNum" />
		<result column="collection_num" jdbcType="INTEGER" property="collectionNum" />
		<result column="group_type" jdbcType="INTEGER" property="groupType" />
		<result column="group_num" jdbcType="INTEGER" property="groupNum" />
		<result column="group_limit_hours" jdbcType="INTEGER" property="groupLimitHours" />
		<result column="group_limit_buy" jdbcType="INTEGER" property="groupLimitBuy" />
		<result column="group_single_buy" jdbcType="INTEGER" property="groupSingleBuy" />
		<result column="seckill_begin_time" jdbcType="TIMESTAMP" property="seckillBeginTime" />
		<result column="seckill_end_time" jdbcType="TIMESTAMP" property="seckillEndTime" />
		<result column="seckill_limit_num" jdbcType="INTEGER" property="seckillLimitNum" />
		<result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
		<result column="add_by" jdbcType="VARCHAR" property="addBy" />
		<result column="upd_time" jdbcType="TIMESTAMP" property="updTime" />
		<result column="upd_by" jdbcType="VARCHAR" property="updBy" />
	</resultMap>

	<select id="getGoodsList" resultMap="BaseResultMap">
		select
		*
		from pms_goods where 1=1
		<choose>
			<when test="form.queryPlatformGoods">
				and shop_id = 0
			</when>
			<otherwise>
				and shop_id != 0
			</otherwise>
		</choose>
		<if test="form.shopId != null">
			and shop_id = #{form.shopId}
		</if>
		<if test="form.cateId != null">
			and cate_id = #{form.cateId}
		</if>
		<if test="form.catePid != null">
			and cate_pid = #{form.catePid}
		</if>
		<if test="form.cateTid != null">
			and cate_tid = #{form.cateTid}
		</if>
		<if test="form.shopCateId != null">
			and shop_cate_id = #{form.shopCateId}
		</if>
		<if test="form.shopCatePid != null">
			and shop_cate_pid = #{form.shopCatePid}
		</if>
		<if test="form.shopCateTid != null">
			and shop_cate_tid = #{form.shopCateTid}
		</if>
		<if test="form.status != null">
			and status = #{form.status}
		</if>
		<if test="form.type != null">
			and type = #{form.type}
		</if>
		<if test="form.minAmount != null">
			and price &gt;= #{form.minAmount}
		</if>
		<if test="form.maxAmount != null">
			and price &lt;= #{form.maxAmount}
		</if>
		<if test="form.catePidList != null">
			and cate_pid in
			<foreach close=")" collection="form.catePidList" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="form.title != null and !''.equals(form.title)">
			and MATCH ( cate_name, shop_cate_name, title, description, detail ) against (#{form.title})
		</if>
		<choose>
			<when test="form.sort != null">
				order by sort asc
			</when>
			<otherwise>
				order by sort asc, weight desc, id desc
			</otherwise>
		</choose>
	</select>

</mapper>